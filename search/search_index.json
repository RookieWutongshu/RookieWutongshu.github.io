{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to RookieWutongshu's Blog Hey guys,here is my web page. At present, this page is primary used to record my Notes. For test, I will push a little bit of notes here.","title":"Home"},{"location":"#welcome-to-rookiewutongshus-blog","text":"Hey guys,here is my web page. At present, this page is primary used to record my Notes. For test, I will push a little bit of notes here.","title":"Welcome to RookieWutongshu's Blog"},{"location":"SQLNotes/","text":"SQLNotes SQLNotes Intro Syntax SQL Select SQL select distinct statement SQL WHERE Clause(\u67e5\u8be2\u5b50\u53e5) SQL AND,OR and NOT Operators SQL ORDER BY Keyword(\u6309\u5173\u952e\u5b57\u6392\u5e8f) SQL INSERT INTO Statement SQL NULL Values SQL UPDATE Statement SQL DELETE Statement SQL TOP, LIMIT or ROWNUM Clause SQL MIN() and MAX() Functions(\u51fd\u6570) Thanks to Intro SQL(Structured Query Language)\u6307\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 SQL\u4f7f\u6211\u4eec\u6709\u80fd\u529b\u8bbf\u95ee\u6570\u636e\u5e93 SQL\u4f7f\u4e00\u79cdANSI( America National Standard Institute\u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u5316\u7ec4\u7ec7)\u7684\u6807\u51c6\u8ba1\u7b97\u673a\u8bed\u8a00 What can SQL Do? \u521b\u5efa\u65b0\u7684\u6570\u636e\u5e93\u53ca\u5176\u5bf9\u8c61(\u8868\uff0c\u7d22\u5f15\uff0c\u89c6\u56fe\uff0c\u5b58\u50a8\u8fc7\u7a0b\uff0c\u51fd\u6570\u548c\u89e6\u53d1\u5668) \u4ece\u6570\u636e\u5e93\u4e2d\uff0c\u6267\u884c\u67e5\u8be2\uff0c\u53d6\u56de\u6570\u636e\uff0c\u63d2\u5165\u6570\u636e\uff0c\u66f4\u65b0\u6570\u636e\uff0c\u5220\u9664\u6570\u636e \u53ef\u4ee5Commit\u6570\u636e\u5b57\u5178 RENAME\u4e00\u4e2a\u5bf9\u8c61 \u5728\u6570\u636e\u5e93\u4e2d\u8bbe\u7f6e\u7528\u6237Grant\u548cRevoke\u6743\u9650 RDBMS Relational Database Management System.\u5173\u7cfb\u578b\u6570\u636e\u5e93\u3002RDBMS\u7684\u6570\u636e\u90fd\u5b58\u4e8e\u6570\u636e\u5e93\u5bf9\u8c61\u2014\u2014 Table(\u8868) \u4e2d\u3002\u8868\u662f\u76f8\u5173\u6570\u636e\u9879\u7684\u96c6\u5408\uff0c\u7531\u5217\u548c\u884c\u7ec4\u6210\u3002\u6bcf\u4e2a\u8868\u7531\u66f4\u5c0f\u7684\u5b9e\u4f53 Field(\u5b57\u6bb5) \u7ec4\u6210\uff0c\u5b57\u6bb5\u662f\u8868\u4e2d\u7684\u4e00\u5217\uff0c\u4ee5maintain(\u7ef4\u62a4)\u8868\u4e2d\u6bcf\u6761\u8bb0\u5f55\u7684\u7279\u5b9a\u4fe1\u606f\u3002 record(\u8bb0\u5f55) \uff08\u4e5f\u79f0\u4e3a\u884c\uff09\uff0c\u662f\u5b58\u5728\u4e8e\u8868\u4e2d\u7684\u6bcf\u4e2a\u5355\u72ec entry(\u6761\u76ee) \uff0c\u4e00\u6761record\u662f\u8868\u4e2d\u7684\u4e00\u4e2ahorizontal entity(\u6a2a\u5411\u5b9e\u4f53)\u3002 column(\u5217) \u662f\u8868\u4e2d\u7684vertical entity(\u5782\u76f4\u5b9e\u4f53)\uff0ccontains associated with \u8868\u4e2d\u4e00\u4e2a\u7279\u5b9a\u5b57\u6bb5\u6240\u6709\u4fe1\u606f\u3002 Syntax Database Tables Each table is identified by a name. Tables contains(\u5305\u542b) records(rows) with data. SQL Statements(\u8bed\u53e5) Most of the actions\uff08\u64cd\u4f5c\uff09 you need to perform on a database are done with SQL statements. Keep in mind that SQL keywords are not case sensitive(\u5927\u5c0f\u5199\u4e0d\u654f\u611f) Semicolon(\u5206\u53f7) after SQL Statements SQL statements always begin with keywords For the second point,\u867d\u7136\u4e0d\u662f\u6bcf\u79cdDBS\u90fd\u8981\u6c42\uff0c\u4f46\u4ed6\u662f\u79cd\u6807\u51c6\u5206\u5272SQL\u8bed\u53e5\u7684\u65b9\u6cd5\uff0c\u8ba9\u6211\u4eec\u5728 same call \uff08\u540c\u4e00\u8bf7\u6c42\uff09\u4e2d\u6267\u884c\u591a\u6761\u8bed\u53e5 Some of the most important SQL Commands\uff08\u547d\u4ee4\uff09 SELECT - extracts(\u63d0\u53d6) data from a database UPDATE - updates data in a database DELETE - deletes data from a database INSERT INTO - inserts new data into a database CREATE DATABASE - creates a new database ALTER DATABASE - modifies a database CREATE TABLE - creates a new table ALTER TABLE - modifies a table DROP TABLE - deletes a table CREATE INDEX - creates an index (search key) DROP INDEX - deletes an index SQL Select The SQL Select Statement The select statement is used to selcet data from a database. The Data returned is stored\uff08\u5b58\u50a8\uff09in a result table,called the result-set Seclect Syntax select column1,column2,... from table_name; if you want to select all the fields available\uff08\u53ef\u83b7\u5f97\u7684\uff09in the table,use the following syntax: select * from table_name; Navigation\uff08\u5bfc\u822a\uff09 in result-set most DBS allow use \u7f16\u7a0b\u51fd\u6570 to navigate in result-set \u4e2d,for example: Move-To-First-Record,Move-To-Next-Record,Get-Record-Content\u7b49\u7b49 SQL select distinct statement The SQL SELECT DISTINCT Statement The select distinct statement is used to return only distinct(\u72ec\u7279\u7684\uff0cdifferent) values Insides a table,a column often contains many duplicate (\u91cd\u590d\u7684) values; and sometimes you only want to list the distinct values. SELECT DISTINCT Syntax SELECT DISTINCT column1,column2,... FROM table_name; The following SQL statement lists the number of different customer countries SELECT COUNT(DISTINCT country) FROM Customers; Note:The example above will not work in Firefox and Microsoft Edge Because they are using Microsoft Access Database.And this usage(\u7528\u6cd5) are not supported for it.We can use following statement to replace SELECT COUNT(*) AS DistinctCountries FROM (SELECT DISTINCT Country FROM Customers); SQL WHERE Clause(\u67e5\u8be2\u5b50\u53e5) The Where clause is used to filter records,extract only those records that fulfill(\u6ee1\u8db3) a specific condition. WHERE Syntax SELECT column1,column2,... FROM table_name WHERE condition; WHERE Clause Example SELECT * FROM Customers WHERE Country = 'Mexico'; Text Fields vs Numeric(\u6570\u5b57\uff0c\u6570\u503c\u7684) Fields SQL requires single quotes(\u5355\u5f15\u53f7) around text values(most database system will also allow the dobule quotes \u53cc\u5f15\u53f7). However,numric fields should not be enclosed(\u88ab\u5305\u56f4) in quotes: SELECT * FROM Customer WHERE CustomerID = 1; Operators(\u8fd0\u7b97\u7b26) in The WHERE Clause The following operators can be used in the WHERE clause: Operator Description = Equal <> Not equal. Note: In some versions of SQL this operator may be written as != > Greater than < Less than >= Greater than or equal <= Less than or equal BETWEEN Between a certain range(\u786e\u5b9a\u7684\u8303\u56f4) LIKE Search for a pattern\uff08\u6a21\u5f0f\uff09 IN To specify(\u6307\u5b9a) multiple possible values for a column SQL AND,OR and NOT Operators The WHERE Clause can be conbined(\u7ed3\u5408) AND,OR,and NOT operators. The AND and OR operators are used to fileter records based on more than one condutions. The AND(OR) opetators displays a record if all(any) the conditons separated(\u5206\u5f00) by AND are(is) TRUE. The Not operators display a record if the condition(s) is NOT TRUE. Syntax SELECT column1,column2,... FROM table_name WHERE condition1 AND condition2 AND condition3...; SELECT column1,column2,... FROM table_name WHERE condition1 OR condition2 OR condition3...; SELECT column1,column2...FROM table_name WHERE NOT condition; Combining(\u4f7f\u7ed3\u5408) AND,OR and NOT You can conbine the AND,OR and NOT operators.Use parenthesis[p\u0259'r\u025bn\u03b8\u0259s\u026as \u5706\u62ec\u53f7] to form(\u7ec4\u6210) complex expressions. SELECT \uff0a FROM Customers WHERE Country='Germany' AND (City='Berlin' OR City='Muchen'); SELECT \uff0a FROM Customers WHERE NOT Country='Germany' AND NOT Country='USA';\u3000 SQL ORDER BY Keyword(\u6309\u5173\u952e\u5b57\u6392\u5e8f) The SQL ORDER BY keyword is used to sort(\u6392\u5e8f) the result-set in ascending or descending order(\u6574\u7406,\u987a\u5e8f ). It sort the records in ascending order by default.To sort the records in descending order\uff0cuse the DESC keyword. ORDER BY Syntax SELECT colomn1,column2... FROM table_name ORDER BY column1,column2,... ASC | DESC; ORDER BY Several Columns Example The following statement will sort the result-set order by Country,but if some rows have the same country,it orders them by CustomerName SELECT * FROM Customers ORDER BY Country,CustomersName (ASC); ORDER BY Several Columns Example2 sorted them in ascending order by the \"Country\" and descending by the \"CustomerName\" column SELECT * FROM Customers ORDER BY Country ASC,CustomerName DESC; SQL INSERT INTO Statement The INSERT INTO statement is used to insert new records in a table. INSERT INTO Syntax INSERT INTO table_name(column1,column2,...) VALUES(values,values2,...); If you are adding values for all the columns of the table,you do not need to specify the column names in the SQL statement.However, make sure the order of the values is in the same as the columns in the table. INSERT INTO table_name VALUES (value1,value2,...); The auto-increment(\u589e\u91cf) field will be generated(\u751f\u6210) automatically when a new record is inserted into the table. Of course,you can also possible to only insert data in specific columns. SQL NULL Values A field with NULL value is a field with no value. If a field in table is optional(\u53ef\u9009\u62e9\u7684)\uff0cit is possible to insert or update a record wirhout adding a value to this field.Then,the field will be saved with a NULL value. Note:A NULL value is different fron a zero value or a field that contains(\u5305\u542b) spaces.A field with a NULL value means it has been left blank(\u7a7a\u767d\u7684) during record creation. Syntax Use IS NULL to test empty values.Use IS NOT NOT NULL test non-empty values SELECT column1 FROM table_name WHERE column2 IS NULL; SELECT column1 FROM table_name WHERE column2 IS NOT NULL; When you create a table contains a field allowed to left blank,you can write as bellow CREATE TABLE CUSTOMERS( ID INT NOT NULL, NAME VARCHAR (20) NOT NULL, AGE INT NOT NULL, ADDRESS CHAR (25) , SALARY DECIMAL (18, 2), PRIMARY KEY (ID) ); SQL UPDATE Statement UPDATE Statement is used to modify the existing(\u73b0\u5b58) records in a table. UPDATE Syntax UPDATE table_name SET column1 = value1,column2 = value2... WHERE condition; --update all the records UPDATE table_name SET column1 = value1...; NOTE : Be careful when updating records in a table!The WHERE Clause is used to specify which record(s) should be updateed.If you omit(\u7701\u7565) it ,all records in the table will be updated! SQL DELETE Statement The DELETE statement is used to delete existing records in a table. DELETE Syntax DELETE FROM table_name WHERE condition; -- delete all the records DELETE FROM table_name; NOTE :The same as UPDATE statement.Be careful the WHERE clause,if you omit WHERE clause,all records in the table will be deleted. Why don't we drop the table directly? Because delete all the records can leave table structs,property and indexs. SQL TOP, LIMIT or ROWNUM Clause The SELECT TOP clause is used to specify the number of records to rerurn. The SELECT TOP clause is useful on large tables with thousands of records.Returning a large number of records can impact(\u5f71\u54cd) on performance(\u6027\u80fd). Note :Not all database systems support the SELECT TOP clause.MySQL supports the LIMIT clause to selcet a limited number of records,whlie Oracle use ROWNUM.But MySQL and Oracle do not support percents as value,you can write a extra SQL statement to realize it such as SELECT COUNT(*)*percent FROM table_name WHERE condition; SQL TOP Syntax -- SQL Server / MS Access Syntax SELECT TOP number | number PERCENT column1,column2... WHERE condition; -- MySQL Syntax SELECT column1,column2... FROM table_name WHERE condition LIMIT number; -- Oracle Syntax SELECT colomn1,column2... FROM table_name WHERE conditon AND ROWNUM <= number; SQL MIN() and MAX() Functions(\u51fd\u6570) The MIN() function returns the smallest value of the selected column. The MAX() function re Thanks to Reference w3schools W3CschoolCN W3School","title":"Notes"},{"location":"SQLNotes/#sqlnotes","text":"SQLNotes Intro Syntax SQL Select SQL select distinct statement SQL WHERE Clause(\u67e5\u8be2\u5b50\u53e5) SQL AND,OR and NOT Operators SQL ORDER BY Keyword(\u6309\u5173\u952e\u5b57\u6392\u5e8f) SQL INSERT INTO Statement SQL NULL Values SQL UPDATE Statement SQL DELETE Statement SQL TOP, LIMIT or ROWNUM Clause SQL MIN() and MAX() Functions(\u51fd\u6570) Thanks to","title":"SQLNotes"},{"location":"SQLNotes/#intro","text":"SQL(Structured Query Language)\u6307\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 SQL\u4f7f\u6211\u4eec\u6709\u80fd\u529b\u8bbf\u95ee\u6570\u636e\u5e93 SQL\u4f7f\u4e00\u79cdANSI( America National Standard Institute\u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u5316\u7ec4\u7ec7)\u7684\u6807\u51c6\u8ba1\u7b97\u673a\u8bed\u8a00 What can SQL Do? \u521b\u5efa\u65b0\u7684\u6570\u636e\u5e93\u53ca\u5176\u5bf9\u8c61(\u8868\uff0c\u7d22\u5f15\uff0c\u89c6\u56fe\uff0c\u5b58\u50a8\u8fc7\u7a0b\uff0c\u51fd\u6570\u548c\u89e6\u53d1\u5668) \u4ece\u6570\u636e\u5e93\u4e2d\uff0c\u6267\u884c\u67e5\u8be2\uff0c\u53d6\u56de\u6570\u636e\uff0c\u63d2\u5165\u6570\u636e\uff0c\u66f4\u65b0\u6570\u636e\uff0c\u5220\u9664\u6570\u636e \u53ef\u4ee5Commit\u6570\u636e\u5b57\u5178 RENAME\u4e00\u4e2a\u5bf9\u8c61 \u5728\u6570\u636e\u5e93\u4e2d\u8bbe\u7f6e\u7528\u6237Grant\u548cRevoke\u6743\u9650 RDBMS Relational Database Management System.\u5173\u7cfb\u578b\u6570\u636e\u5e93\u3002RDBMS\u7684\u6570\u636e\u90fd\u5b58\u4e8e\u6570\u636e\u5e93\u5bf9\u8c61\u2014\u2014 Table(\u8868) \u4e2d\u3002\u8868\u662f\u76f8\u5173\u6570\u636e\u9879\u7684\u96c6\u5408\uff0c\u7531\u5217\u548c\u884c\u7ec4\u6210\u3002\u6bcf\u4e2a\u8868\u7531\u66f4\u5c0f\u7684\u5b9e\u4f53 Field(\u5b57\u6bb5) \u7ec4\u6210\uff0c\u5b57\u6bb5\u662f\u8868\u4e2d\u7684\u4e00\u5217\uff0c\u4ee5maintain(\u7ef4\u62a4)\u8868\u4e2d\u6bcf\u6761\u8bb0\u5f55\u7684\u7279\u5b9a\u4fe1\u606f\u3002 record(\u8bb0\u5f55) \uff08\u4e5f\u79f0\u4e3a\u884c\uff09\uff0c\u662f\u5b58\u5728\u4e8e\u8868\u4e2d\u7684\u6bcf\u4e2a\u5355\u72ec entry(\u6761\u76ee) \uff0c\u4e00\u6761record\u662f\u8868\u4e2d\u7684\u4e00\u4e2ahorizontal entity(\u6a2a\u5411\u5b9e\u4f53)\u3002 column(\u5217) \u662f\u8868\u4e2d\u7684vertical entity(\u5782\u76f4\u5b9e\u4f53)\uff0ccontains associated with \u8868\u4e2d\u4e00\u4e2a\u7279\u5b9a\u5b57\u6bb5\u6240\u6709\u4fe1\u606f\u3002","title":"Intro"},{"location":"SQLNotes/#syntax","text":"Database Tables Each table is identified by a name. Tables contains(\u5305\u542b) records(rows) with data. SQL Statements(\u8bed\u53e5) Most of the actions\uff08\u64cd\u4f5c\uff09 you need to perform on a database are done with SQL statements. Keep in mind that SQL keywords are not case sensitive(\u5927\u5c0f\u5199\u4e0d\u654f\u611f) Semicolon(\u5206\u53f7) after SQL Statements SQL statements always begin with keywords For the second point,\u867d\u7136\u4e0d\u662f\u6bcf\u79cdDBS\u90fd\u8981\u6c42\uff0c\u4f46\u4ed6\u662f\u79cd\u6807\u51c6\u5206\u5272SQL\u8bed\u53e5\u7684\u65b9\u6cd5\uff0c\u8ba9\u6211\u4eec\u5728 same call \uff08\u540c\u4e00\u8bf7\u6c42\uff09\u4e2d\u6267\u884c\u591a\u6761\u8bed\u53e5 Some of the most important SQL Commands\uff08\u547d\u4ee4\uff09 SELECT - extracts(\u63d0\u53d6) data from a database UPDATE - updates data in a database DELETE - deletes data from a database INSERT INTO - inserts new data into a database CREATE DATABASE - creates a new database ALTER DATABASE - modifies a database CREATE TABLE - creates a new table ALTER TABLE - modifies a table DROP TABLE - deletes a table CREATE INDEX - creates an index (search key) DROP INDEX - deletes an index","title":"Syntax"},{"location":"SQLNotes/#sql-select","text":"The SQL Select Statement The select statement is used to selcet data from a database. The Data returned is stored\uff08\u5b58\u50a8\uff09in a result table,called the result-set Seclect Syntax select column1,column2,... from table_name; if you want to select all the fields available\uff08\u53ef\u83b7\u5f97\u7684\uff09in the table,use the following syntax: select * from table_name; Navigation\uff08\u5bfc\u822a\uff09 in result-set most DBS allow use \u7f16\u7a0b\u51fd\u6570 to navigate in result-set \u4e2d,for example: Move-To-First-Record,Move-To-Next-Record,Get-Record-Content\u7b49\u7b49","title":"SQL Select"},{"location":"SQLNotes/#sql-select-distinct-statement","text":"The SQL SELECT DISTINCT Statement The select distinct statement is used to return only distinct(\u72ec\u7279\u7684\uff0cdifferent) values Insides a table,a column often contains many duplicate (\u91cd\u590d\u7684) values; and sometimes you only want to list the distinct values. SELECT DISTINCT Syntax SELECT DISTINCT column1,column2,... FROM table_name; The following SQL statement lists the number of different customer countries SELECT COUNT(DISTINCT country) FROM Customers; Note:The example above will not work in Firefox and Microsoft Edge Because they are using Microsoft Access Database.And this usage(\u7528\u6cd5) are not supported for it.We can use following statement to replace SELECT COUNT(*) AS DistinctCountries FROM (SELECT DISTINCT Country FROM Customers);","title":"SQL select distinct statement"},{"location":"SQLNotes/#sql-where-clause","text":"The Where clause is used to filter records,extract only those records that fulfill(\u6ee1\u8db3) a specific condition. WHERE Syntax SELECT column1,column2,... FROM table_name WHERE condition; WHERE Clause Example SELECT * FROM Customers WHERE Country = 'Mexico'; Text Fields vs Numeric(\u6570\u5b57\uff0c\u6570\u503c\u7684) Fields SQL requires single quotes(\u5355\u5f15\u53f7) around text values(most database system will also allow the dobule quotes \u53cc\u5f15\u53f7). However,numric fields should not be enclosed(\u88ab\u5305\u56f4) in quotes: SELECT * FROM Customer WHERE CustomerID = 1; Operators(\u8fd0\u7b97\u7b26) in The WHERE Clause The following operators can be used in the WHERE clause: Operator Description = Equal <> Not equal. Note: In some versions of SQL this operator may be written as != > Greater than < Less than >= Greater than or equal <= Less than or equal BETWEEN Between a certain range(\u786e\u5b9a\u7684\u8303\u56f4) LIKE Search for a pattern\uff08\u6a21\u5f0f\uff09 IN To specify(\u6307\u5b9a) multiple possible values for a column","title":"SQL WHERE Clause(\u67e5\u8be2\u5b50\u53e5)"},{"location":"SQLNotes/#sql-andor-and-not-operators","text":"The WHERE Clause can be conbined(\u7ed3\u5408) AND,OR,and NOT operators. The AND and OR operators are used to fileter records based on more than one condutions. The AND(OR) opetators displays a record if all(any) the conditons separated(\u5206\u5f00) by AND are(is) TRUE. The Not operators display a record if the condition(s) is NOT TRUE. Syntax SELECT column1,column2,... FROM table_name WHERE condition1 AND condition2 AND condition3...; SELECT column1,column2,... FROM table_name WHERE condition1 OR condition2 OR condition3...; SELECT column1,column2...FROM table_name WHERE NOT condition; Combining(\u4f7f\u7ed3\u5408) AND,OR and NOT You can conbine the AND,OR and NOT operators.Use parenthesis[p\u0259'r\u025bn\u03b8\u0259s\u026as \u5706\u62ec\u53f7] to form(\u7ec4\u6210) complex expressions. SELECT \uff0a FROM Customers WHERE Country='Germany' AND (City='Berlin' OR City='Muchen'); SELECT \uff0a FROM Customers WHERE NOT Country='Germany' AND NOT Country='USA';","title":"SQL AND,OR and NOT Operators"},{"location":"SQLNotes/#sql-order-by-keyword","text":"The SQL ORDER BY keyword is used to sort(\u6392\u5e8f) the result-set in ascending or descending order(\u6574\u7406,\u987a\u5e8f ). It sort the records in ascending order by default.To sort the records in descending order\uff0cuse the DESC keyword. ORDER BY Syntax SELECT colomn1,column2... FROM table_name ORDER BY column1,column2,... ASC | DESC; ORDER BY Several Columns Example The following statement will sort the result-set order by Country,but if some rows have the same country,it orders them by CustomerName SELECT * FROM Customers ORDER BY Country,CustomersName (ASC); ORDER BY Several Columns Example2 sorted them in ascending order by the \"Country\" and descending by the \"CustomerName\" column SELECT * FROM Customers ORDER BY Country ASC,CustomerName DESC;","title":"SQL ORDER BY Keyword(\u6309\u5173\u952e\u5b57\u6392\u5e8f)"},{"location":"SQLNotes/#sql-insert-into-statement","text":"The INSERT INTO statement is used to insert new records in a table. INSERT INTO Syntax INSERT INTO table_name(column1,column2,...) VALUES(values,values2,...); If you are adding values for all the columns of the table,you do not need to specify the column names in the SQL statement.However, make sure the order of the values is in the same as the columns in the table. INSERT INTO table_name VALUES (value1,value2,...); The auto-increment(\u589e\u91cf) field will be generated(\u751f\u6210) automatically when a new record is inserted into the table. Of course,you can also possible to only insert data in specific columns.","title":"SQL INSERT INTO Statement"},{"location":"SQLNotes/#sql-null-values","text":"A field with NULL value is a field with no value. If a field in table is optional(\u53ef\u9009\u62e9\u7684)\uff0cit is possible to insert or update a record wirhout adding a value to this field.Then,the field will be saved with a NULL value. Note:A NULL value is different fron a zero value or a field that contains(\u5305\u542b) spaces.A field with a NULL value means it has been left blank(\u7a7a\u767d\u7684) during record creation. Syntax Use IS NULL to test empty values.Use IS NOT NOT NULL test non-empty values SELECT column1 FROM table_name WHERE column2 IS NULL; SELECT column1 FROM table_name WHERE column2 IS NOT NULL; When you create a table contains a field allowed to left blank,you can write as bellow CREATE TABLE CUSTOMERS( ID INT NOT NULL, NAME VARCHAR (20) NOT NULL, AGE INT NOT NULL, ADDRESS CHAR (25) , SALARY DECIMAL (18, 2), PRIMARY KEY (ID) );","title":"SQL NULL Values"},{"location":"SQLNotes/#sql-update-statement","text":"UPDATE Statement is used to modify the existing(\u73b0\u5b58) records in a table. UPDATE Syntax UPDATE table_name SET column1 = value1,column2 = value2... WHERE condition; --update all the records UPDATE table_name SET column1 = value1...; NOTE : Be careful when updating records in a table!The WHERE Clause is used to specify which record(s) should be updateed.If you omit(\u7701\u7565) it ,all records in the table will be updated!","title":"SQL UPDATE Statement"},{"location":"SQLNotes/#sql-delete-statement","text":"The DELETE statement is used to delete existing records in a table. DELETE Syntax DELETE FROM table_name WHERE condition; -- delete all the records DELETE FROM table_name; NOTE :The same as UPDATE statement.Be careful the WHERE clause,if you omit WHERE clause,all records in the table will be deleted. Why don't we drop the table directly? Because delete all the records can leave table structs,property and indexs.","title":"SQL DELETE Statement"},{"location":"SQLNotes/#sql-top-limit-or-rownum-clause","text":"The SELECT TOP clause is used to specify the number of records to rerurn. The SELECT TOP clause is useful on large tables with thousands of records.Returning a large number of records can impact(\u5f71\u54cd) on performance(\u6027\u80fd). Note :Not all database systems support the SELECT TOP clause.MySQL supports the LIMIT clause to selcet a limited number of records,whlie Oracle use ROWNUM.But MySQL and Oracle do not support percents as value,you can write a extra SQL statement to realize it such as SELECT COUNT(*)*percent FROM table_name WHERE condition; SQL TOP Syntax -- SQL Server / MS Access Syntax SELECT TOP number | number PERCENT column1,column2... WHERE condition; -- MySQL Syntax SELECT column1,column2... FROM table_name WHERE condition LIMIT number; -- Oracle Syntax SELECT colomn1,column2... FROM table_name WHERE conditon AND ROWNUM <= number;","title":"SQL TOP, LIMIT or ROWNUM Clause"},{"location":"SQLNotes/#sql-min-and-max-functions","text":"The MIN() function returns the smallest value of the selected column. The MAX() function re","title":"SQL MIN() and MAX() Functions(\u51fd\u6570)"},{"location":"SQLNotes/#thanks-to","text":"Reference w3schools W3CschoolCN W3School","title":"Thanks to"}]}